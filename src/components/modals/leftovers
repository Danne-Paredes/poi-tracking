         
          <>
            <div className="w-full p-2">
                <label className='text-kv-gray'>
                    Casino:
                    <SingleSelect
                        className="max-w-xs snap-center"
                        value={selectedVisit.casino ? { label: selectedVisit.casino, value: selectedVisit.casino } : null}
                        options={casinoOptions}
                        placeholder='Select a casino'
                        onChange={(e) => {
                          const updatedVisits = [...data.visits];
                          updatedVisits[selectedVisitIndex].casino = e.value;
                          handleDataChange({ ...data, visits: updatedVisits });
                        }}
                        />
                </label>
            </div>
            <div className="flex flex-col sm:flex-row">
              <div className="w-full sm:w-1/2 p-2">
                <h2 className='text-kv-gray'>
                    Arrival: 
                    {selectedVisit.arrival ? 
                        <input
                        className='justify-center mx-auto items-center text-center block mb-2 text-black'
                        type="datetime-local"
                        value={selectedVisit.arrival}
                        onChange={(e) => {
                          const updatedVisits = [...data.visits];
                          updatedVisits[selectedVisitIndex].arrival = e.target.value;
                          handleDataChange({ ...data, visits: updatedVisits });
                        }}
                        />
                        : null}
                </h2>
              </div>
              <div className="w-full sm:w-1/2 p-2">
                <h2 className='text-kv-gray'>
                    Departure: 
                    {selectedVisit.departure ? 
                        <input
                        className='justify-center mx-auto items-center text-center block mb-2 text-black'
                        type="datetime-local"
                        value={selectedVisit.departure}
                        onChange={(e) => {
                          const updatedVisits = [...data.visits];
                          updatedVisits[selectedVisitIndex].departure = e.target.value;
                          handleDataChange({ ...data, visits: updatedVisits });
                        }}
                        />
                        : null}
                </h2>
              </div>
          </div>
          <div className="w-full sm:w-1/2 p-2 flex flex-col items-center">
  { 
    selectedVisit.transactions && selectedVisit.transactions.map((transaction, index) => (
      <div 
        key={index} 
        className={(index % 2 === 0 ? 'bg-kv-logo-gray' : 'bg-slate-gray') + ' p-2 w-full flex flex-col items-center'}
      >
        <div className="flex justify-between w-full mb-2">
          <div className='mr-2'>
            Date: 
            <input
              className='ml-2 text-black'
              type="datetime-local"
              value={transaction.date}
              onChange={(e) => {
                // Your change handler code
              }}
            />
          </div>
          <div className='mr-2'>
            Amount:
            <input 
              className='ml-2 text-black'
              value={transaction.amount}
              type='number'
              onChange={(e) => {
                // Your change handler code
              }}
            />
          </div>
          <div className='mr-2'>
            Type: {transaction.type}
          </div>
        </div>
        <div className="w-full">
          Note:
          <textarea 
            className='ml-2 text-black w-full'
            value={transaction.note}
            onChange={(e) => {
              // Your change handler code
            }}
          />
        </div>
      </div>
    ))
  }
</div>

        </>